
[ x | ] :drop def

[ drop ] :comment def


"## Stack Manipulation Operators ##" comment

[ x | x x ] :dup def

[ x y | y x ] :swap def

[ y x f | y f call x ] :dip def

[ [[ :nil | ] [ drop clear ]] match ] :clear def

[ [[ x 0 | ] [ x n | x x n 1 - dupN ]] match ] :dupN def


"## Numeric Operators ##" comment

[ -1 * + ] :- def


"## String Operators ##" comment

[ "" [ weld ] fold ] :multiWeld def


"## Boolean Operators ##" comment

[ x x | :true ] := def

[ :true :true | :true ] :and def

[ [[ :true x | :true ] [ x :true | :true ]] match ] :or def

[ [[ :true | :nil ] [ x | :true ]] match ] :not def


"## Control Flow ##" comment

[ [[ :true x y | x call ] [ z x y | y call ]] match ] :if def

[ [[ 0 f | ] [ n f | f call n 1 - f times-do ]] match ] :times-do def 

[ [[ [] x f | x ] [ xs x f | xs >> x f call f fold ]] match ] :fold def

[ [[ [] f | [] ] [ xs f | xs >> [ f map ] dip f call << ]] match ] :map def
